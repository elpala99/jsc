This was done for Ubuntu 18.04 LTS.

################ MINIMAL ####################
; FIXES ;
1. Increment mouse speed (Settings)
2. Fix right click
  | Install gnome-tweaks with apt (3.28.1)
  | Change mouse emulation to Area
3. Fix broken dependencies
  | sudo apt --fix-broken install

WINDOW MANAGER
1. i3 with apt (4.17.1)
2. i3-gaps (4.17.1)
  | sudo add-apt-repository ppa:kgilmer/speed-ricer
  | sudo apt update
  | sudo apt install i3-gaps

APPS
1. ; st (0.8.3) ;
  | Go to webpage of st https://st.suckless.org/ and download tar
  | Untar it at the .config folder
  | Download patches listed in config.h
  | Apply them with git apply
2. brave (1.8.96)
  | sudo apt install apt-transport-https curl
  | curl -s https://brave-browser-apt-release.s3.brave.com/brave-core.asc |
    sudo apt-key --keyring /etc/apt/trusted.gpg.d/brave-browser-release.gpg add -
  | echo "deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main" |
    sudo tee /etc/apt/sources.list.d/brave-browser-release.list
  | sudo apt update
  | sudo apt install brave-browser
3. okular with apt (1.3.3)
4. spotify with snap (spotify 1.1.26)
5. emacs (26.3)
  * libx11-dev
  * libxpm-dev
  * libjpeg-dev
  * libpng-dev
  * libgif-dev
  * libtiff-dev
  * libgtk2.0-dev
  * libtinfo-dev
  * libncurses5-dev
  * automake
  * autoconf
  * libgnutls28-dev
  * mailutils
  | ; Go to Ecuador Mirror and download tar ;
  | ./configure --with-x-toolkit=lucid
  | sudo make
  | sudo make install
6. doom emacs (2.0.9)
  | git clone --depth 1 https://github.com/hlissner/doom-emacs ~/.emacs.d
  | ~/.emacs.d/bin/doom install
7. pavucontrol with apt (3.0)

I3 RELATED STUFF:
1. feh with apt (2.23.2)
2. scrot with apt (0.8)
3. betterlockscreen
  * libxcb-randr0-dev
  * libxcb-xrm-dev
  * libev-dev
  * libxcb-xinerama0-dev
  * libxcb-xkb-dev
  * libxcb-composite0-dev
  * libxcb-image0-dev
  * libxkbcommon-dev
  * libxkbcommon-x11-dev
  * libpam-cracklib
  * libpam-doc
  * libpam-modules
  * libpam-modules-bin
  * libpam-runtime
  * libpam0g-dev
  * checkinstall
  * i3lock-color
    * git clone https://github.com/PandorasFox/i3lock-color
    * git tag -f "git-$(git rev-parse --short HEAD)"
    * autoreconf -i && ./configure && make
    * sudo checkinstall --pkgname=i3lock-color --pkgversion=1 -y
  | git clone https://github.com/pavanjadhaw/betterlockscreen
  | sudo cp betterlockscreen /usr/local/bin
4. compton with apt (0.1)
5. xclip with apt (0.12)
6. polybar (3.4.3)
  * xcb-proto
  * cmake
  * libpulse-dev
  * libjsoncpp-dev
  * libxcb-xkb-dev
  * libxcb-xrm-dev
  * libxcb-cursor-dev
  * libmpdclient-dev
  * libnl-genl-3-dev
  * pkg-config
  * python3-sphinx
  * libcairo2-dev
  * libxcb1-dev
  * libxcb-util0-dev
  * libxcb-randr0-dev
  * libxcb-composite0-dev
  * python-xcbgen
  * libxcb-image0-dev
  * libxcb-emh-dev
  * libxcb-icccm4-dev
  | ; Download tar from git page ;
  | ./build.sh

Packages:
1. python (3.8.2)
  * build-essential
  * zlib1g-dev
  * libffi-dev
  * libreadline-gplv2-dev
  * libncursesw5-dev
  * libssl-dev
  * libsqlite3-dev
  * tk-dev
  * libgdbm-dev
  * libc6-dev
  * libbz2-dev
  | ; Download tar from python page. ;
  | ./configure --enable-optimizations
  | sudo make
  | sudo make install
2. texlive (2017.20180305)
  | sudo apt install texlive-full
3. ghcup (0.1.5)
  * curl
  * libgmp-dev
  * libncurses-dev
  | curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh
4. agda (2.6.1)
  | cabal update
  | cabal install Agda
  | agda-mode setup
5. git with apt (2.17.1)
  | git config --global core.editor "emacsclient -c"
6. R (3.6.1)
  * gfortran
  * libcurl4-openssl-dev
  | ; Download tar ball from R webpage. ;
  | ./configure --enable-R-shlib
  | sudo make
  | sudo make install

################### ADD ONS AND COSMETHIC ########################
; COSMETHIC ;
1. Theme
  | Install lxappeareance (0.6.3)
  | Select desired theme.
  | Download Moka Icons.
    | sudo add-apt-repository -u ppa:snwh/ppa
    | sudo apt install moka-icon-theme faba-icon-theme faba-mono-icons
  | Apply it using lx.
2. Load images at Pictures for random Background.

APPS:
1. vlc with snap (3.0.8)
2. ; Pycharm ;
  | Download tar
  | Move folder to /opt/
  | Add to path
3. ; Popcorn Time ;
  | sudo apt update && sudo apt install libcanberra-gtk-module libgconf-2-4
  | Install tar from active website.
  | Put it in /opt/
  | Add to path
4. libreoffice with snap (6.4.1)
5. arandr with apt (0.1.19)
6. inkscape with apt (0.92.3)
  -- EXTENSION: textext (0.11)
     | sudo apt install python2.7
     | sudo apt install python-gtk2 python-gtksourceview2
     | sudo apt install pdf2svg
     | ; Download tar from github https://github.com/textext/textext/releases ;
     | python2 setup.py
7. pdftk with snap (2.02)
8. teams (1.3.0)
  | ; Download deb from page ;
9. natron (2.3.14)
  | ; Download tgz from page ;
  | ; Run installer ;
10. netlogo (6.1.1)
  | ; Download tgz from page ;
  | ; Move with opt ;
11. repast symphony (2.7)
  | sudo apt get install openjdk-8-jdk
  | ; Downaload Eclipse Commiters (2019.06) from page ;
  | ; Move it to opt ;
  | ; Using Eclipse install Eclipse Groovy Development tools and Groovy Compile 2.4 (only) ;
  | ; Install repast using Eclipse ;
12. discord with snap (0.0.10)
13. stremio (4.4)
  * qml-module-qtwebengine
  * qml-module-qtwebchannel
  * qml-module-qt-labs-platform
  * libmpv1
  | ; Download deb from page ;
14. R-studio (1.2.5019)
  | ; Install deb from web. ;
  | sudo dpkg --ignore-depends=libclang-dev -i rstudio-1.2.5019-amd64.deb
  | sudo apt install -f
15. chrome (80.0)
  | sudo nano /etc/apt/sources.list.d/google-chrome.list
    | deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main
  | wget https://dl.google.com/linux/linux_signing_key.pub
  | sudo apt-key add linux_signing_key.pub
  | sudo apt update
  | rm linux_signing_key.pub
  | sudo apt install google-chrome-stable

PACKAGES:
1. xrandr (7.7)
  | sudo apt install x11-xserver-utils
2. wine (4.17)
  | sudo dpkg --add-architecture i386
  | wget -nc https://dl.winehq.org/wine-builds/winehq.key
  | sudo apt-key add winehq.key
  | sudo apt-add-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ bionic main'
  | sudo add-apt-repository ppa:cybermax-dexter/sdl2-backport
  | sudo apt update
  | sudo apt install --install-recommends winehq-stable
3. jupyter notebook (2.0.1)
  | sudo pip install jupyterlab
4. java (11.0.6)
  | sudo apt install default-jdk

; BACKUPS: ;
1. dotfiles (Based on https://www.atlassian.com/git/tutorials/dotfiles)
  | Startup:
    | git init --bare $HOME/folder/to/dotfiles
    | Add in bashrc:
      | alias dfiles='/usr/bin/git --git-dir=$HOME/folder/to/dotfiles --work-tree=$HOME'
    | dfiles config --local status.showUntrackedFiles no
    | dfiles remote add origin <git-link>
    | dfiles push --set-upstream origin master
  | Backup:
    | Add to the gitignore the folder your going to clone the git.
    | Check that the alias exists.
    | git clone --bare <git-link> $HOME/folder/to/dotfiles
    | dfiles config --local status.showUntrackedFiles no
    | dfiles checkout (Solve conflicts)
